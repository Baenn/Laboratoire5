/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Laboratoire5;

import java.awt.FileDialog;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author AP85250
 */
public class UI extends javax.swing.JFrame 
{
    // attributs
    private WordListDefinition wordList;
    private String loadedDictionaryFilename; // the name of the original file loaded (used for saving with the same name)
    
    /**
     * Creates new form UI
     */
    public UI() 
    {
        // initiate attributs
        wordList = new WordListDefinition();
        loadedDictionaryFilename = "";
        
        // initiate window component
        initComponents();
        setTitle("Dictio");
        
        // TODO: remove this?
        // populate the all words list 
        refreshAllWordsList();
    }
    
    // instance methods
    /**
     * Method used to refresh the all words list.
     * It is called when a new list is loaded or when a new word is added
     */
    public void refreshAllWordsList()
    {
        DefaultListModel model = new DefaultListModel();
        List<WordDefinition> allWords = getWordList().getAllWordsDefinition();
        
        for(WordDefinition word : allWords)
        {
            model.addElement(word.getWord());
        }
        
        this.getAllWordsList().setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inputField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        suggestionList = new javax.swing.JList<String>();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allWordsList = new javax.swing.JList<String>();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        definitionTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        addModifyButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        suggestionList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(suggestionList);

        jLabel4.setText("Recherche");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputField, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(80, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        allWordsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        allWordsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allWordsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allWordsList);

        jLabel3.setText("Tous les mots");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setText("DÃ©finition");

        definitionTextArea.setColumns(20);
        definitionTextArea.setLineWrap(true);
        definitionTextArea.setRows(5);
        definitionTextArea.setWrapStyleWord(true);
        definitionTextArea.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jScrollPane3.setViewportView(definitionTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(138, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        addModifyButton.setText("ajouter / modifier");
        addModifyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addModifyButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addModifyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(addModifyButton)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        loadButton.setText("Charger");
        loadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadButtonMouseClicked(evt);
            }
        });

        saveButton.setText("Enregistrer");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        jLabel1.setText("Dictio");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addComponent(loadButton)
                .addGap(34, 34, 34)
                .addComponent(saveButton)
                .addGap(210, 210, 210))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(saveButton))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Mouse clicked event handler for the allWordsList UI list.
     * When an element is selected in the list, the matching definition will be
     * displayed in the definitionTextArea.
     * @param evt The event object
     */
    private void allWordsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allWordsListMouseClicked
        
        String selectedWord = this.getAllWordsList().getSelectedValue();
        List<WordDefinition> allWords = getWordList().getAllWordsDefinition();
        
        // get the definition
        for(int i = 0 ; i < allWords.size() ; i++)
        {
            if(allWords.get(i).getWord().equals(selectedWord))
            {
                // update definition field
                this.getDefinitionTextArea().setText(allWords.get(i).getDefinition());
                i = allWords.size(); // escape the looop
            }
        }
        
        // display the definition
        this.getInputField().setText(selectedWord);
    }//GEN-LAST:event_allWordsListMouseClicked

    /**
     * Mouse clicked event for the add / modify button
     * This button will update the word in the wordList attribute.
     * @param evt The event object
     */
    private void addModifyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addModifyButtonMouseClicked
        String inputWord = this.getInputField().getText();
        String inputDefinition = this.getDefinitionTextArea().getText();
        
        if(!this.getWordList().addWordDefinition(new WordDefinition(inputWord, inputDefinition)))
            JOptionPane.showMessageDialog(this, "ERREUR: Le mot n'a pas pu "
                    + "Ãªtre modifiÃ©/ajoutÃ©\n\n", "ERREUR", JOptionPane.ERROR_MESSAGE);
        
        else // if no error, we can refresh the list
            refreshAllWordsList();
    }//GEN-LAST:event_addModifyButtonMouseClicked

    /**
     * Mouse clicked event for the load button
     * This button will open a dialog to allow the user to select a dictionary
     * file. The content of the file will be loaded in the wordList attribute.
     * @param evt The event object
     */
    private void loadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseClicked
        // open file dialog
        FileDialog dialog = new FileDialog(this, "Choisir le fichier dictionnaire", FileDialog.LOAD);
        dialog.setFile("*.txt");
        dialog.setVisible(true);
        
        String filename = dialog.getFile();
        if(filename != null) // if user selected a file
        {
            filename = dialog.getDirectory() + filename;
            
            if(getWordList().loadListFromFile(filename))
            {
                loadedDictionaryFilename = filename;
                refreshAllWordsList();
            }
            
            else // if file could not be loaded, show error dialog
                JOptionPane.showMessageDialog(this, "ERREUR: Le fichier n'a "
                        + "pas pu Ãªtre chargÃ©!\n\nVÃ©rifiez que le fichier est "
                        + "valid est contient <<mot & dÃ©finition>> sur toutes "
                        + "les lignes\n\n", "ERREUR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_loadButtonMouseClicked

    /**
     * Mouse clicked Event handler for the save button.
     * This button will save the list of words in a file.
     * TODO: In the file dialog, restrict file type to .txt file
     * @param evt The event object
     */
    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        
        FileDialog dialog = new FileDialog(this, "Ssuvegarder le fichier dictionnaire", FileDialog.SAVE);
        dialog.setFile(loadedDictionaryFilename);
        dialog.setVisible(true);
        
        String filename = dialog.getFile();
        if(filename != null) // if user selected a file
        {
            filename = dialog.getDirectory() + filename;
            
            if(this.getWordList().saveListToFile(filename))
            {
                loadedDictionaryFilename = filename; // save new name in case user wants to save again
                JOptionPane.showMessageDialog(this, "La list des mots a Ã©tÃ© "
                        + "sauvegardÃ© dans le fichier\n" + filename + ".\n\n", "INFORMATION", 
                        JOptionPane.INFORMATION_MESSAGE);
            }

            else // if there was a problem saving the file
                JOptionPane.showMessageDialog(this, "ERREUR: Impossible de "
                        + "sauvegarder dans le fichier.\n\n", "ERREUR", 
                        JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addModifyButton;
    private javax.swing.JList<String> allWordsList;
    private javax.swing.JTextArea definitionTextArea;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JList<String> suggestionList;
    // End of variables declaration//GEN-END:variables


    // accessor methods
    public WordListDefinition getWordList() {
        return wordList;
    }

    public JButton getAddModifyButton() {
        return addModifyButton;
    }

    public JList<String> getAllWordsList() {
        return allWordsList;
    }

    public JTextArea getDefinitionTextArea() {
        return definitionTextArea;
    }

    public JTextField getInputField() {
        return inputField;
    }

    public JButton getLoadButton() {
        return loadButton;
    }

    public JButton getSaveButton() {
        return saveButton;
    }

    public JList<String> getSuggestionList() {
        return suggestionList;
    }
    
    // mutator methods
    public void setWordList(WordListDefinition wordList) {
        this.wordList = wordList;
    }

    public void setAddModifyButton(JButton addModifyButton) {
        this.addModifyButton = addModifyButton;
    }

    public void setAllWordsList(JList<String> allWordsList) {
        this.allWordsList = allWordsList;
    }

    public void setDefinitionTextArea(JTextArea definitionTextArea) {
        this.definitionTextArea = definitionTextArea;
    }

    public void setInputField(JTextField inputField) {
        this.inputField = inputField;
    }

    public void setLoadButton(JButton loadButton) {
        this.loadButton = loadButton;
    }

    public void setSaveButton(JButton saveButton) {
        this.saveButton = saveButton;
    }

    public void setSuggestionList(JList<String> suggestionList) {
        this.suggestionList = suggestionList;
    }
}
